name: Publish image

description: Publishes Plugin Images
inputs:
  plugin:
    required: true
    description: name of the plugin
  name:
    required: true
    description: name of the resulting image
  version:
    required: true
    description: image version
  registry-username:
    required: true
    description: registry credentials username
  registry-password:
    required: true
    description: registry credentials password
  sbom-name:
    required: true
    description: sbom name
  sbom-repository:
    required: true
    description: sbom repository
  signature-repository:
    required: true
    description: signature repository

outputs:
  digest:
    value: ${{ steps.digest.outputs.digest }}
    description: published image digest

runs:
  using: composite
  steps:
    - shell: bash
      id: ko-publish
      env:
        REGISTRY_PASSWORD: ${{ inputs.registry-password }}
        COSIGN_REPOSITORY: ${{ inputs.sbom-repository }}
        IMAGE_NAME: ${{ inputs.name }}
        PLUGIN: ${{ inputs.plugin }}
      run: |
        set -e
        echo "digest=$(VERSION=${{ inputs.version }} make ko-publish)" >> $GITHUB_OUTPUT

    - uses: CycloneDX/gh-gomod-generate-sbom@d4aee0cf5133055dbd98899978246c10c18c440f # v1.1.0
      with:
        version: v1
        args: app -licenses -json -output ${{ inputs.sbom-name }}-bom.cdx.json -main ./plugins/${{ inputs.plugin }}

    - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      with:
        name: ${{ inputs.sbom-name }}-bom-cdx
        path: ${{ inputs.sbom-name }}-bom.cdx.json

    - shell: bash
      if: ${{ inputs.sign-image == 'true' }}
      env:
        COSIGN_REPOSITORY: ${{ inputs.signature-repository }}
      run: |
        set -e
        cosign sign --yes \
          -a "repo=${{ github.repository }}" \
          -a "workflow=${{ github.workflow }}" \
          -a "ref=${{ github.sha }}" \
          ${{ steps.ko-publish.outputs.digest }}

    - shell: bash
      env:
        COSIGN_REPOSITORY: ${{ inputs.sbom-repository }}
      run: |
        cosign attach sbom --sbom ./${{ inputs.sbom-name }}-bom.cdx.json --type cyclonedx ${{ steps.ko-publish.outputs.digest }}
    
    - shell: bash
      id: digest
      run: |
        echo "The image generated is: ${{ steps.ko-publish.outputs.digest }}"
        DIGEST=$(echo ${{ steps.ko-publish.outputs.digest }} | cut -d '@' -f2)
        echo "Digest from image is: $DIGEST"
        echo "digest=$DIGEST" >> $GITHUB_OUTPUT